{"version":3,"sources":["src/index.js"],"names":["_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","TypeError","iter","Symbol","iterator","Array","from","isArray","_arrayLikeToArray","_slicedToArray","i","_arrayWithHoles","_iterableToArrayLimit","_nonIterableRest","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","len","length","arr2","_i","_s","_e","_x","_r","_arr","_n","_d","next","done","push","value","err","return","require","_React","React","useState","useEffect","redChannel","blueChannel","greenChannel","App","sampleImg","document","querySelector","src","_useState2","colors","setColors","getColorParams","event","element","hasClick","cords","getCords","canvas","thumb","useCanvas","params","getContext","bg","rgbToHex","getImageData","x","y","data","concat","style","background","inputFile","displayFile","preview","generateImage","addEventListener","num","createElement","className","map","item","backgroundColor","key","id","alt","type","for","offsetX","offsetY","layerX","layerY","el","image","callback","width","height","drawImage","r","g","b","imgInput","db","window","localStorage","getItem","t","setTimeout","setItem","getAttribute","clearTimeout","updateUi","files","reader","FileReader","onload","e","target","result","readAsDataURL","ReactDOM","render","root","synth","Tone","MonoSynth","toDestination","playSynth","redSynth","set","oscillator","greenNote","context","resume","console","log","triggerAttackRelease","volume","getElementById"],"mappings":"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","file":"src.2d36bdb7.js","sourceRoot":"..","sourcesContent":["import \"./styles.css\";\r\n\r\nconst { useState, useEffect } = React;\r\n\r\n//Fallback Values for Tone.JS to use.\r\nlet redChannel = 0;\r\nlet blueChannel = 255;\r\nlet greenChannel = 0;\r\n//https://codepen.io/nakome/pen/ExjEqoV - React Colour Picker used as Eyedropper alternative. Created by CodePen user: Moncho Varela\r\n\r\n// Home\r\nconst App = () => {\r\n  // Fallback image\r\n  const sampleImg = document.querySelector(\"#demo\").src;\r\n  const [colors, setColors] = useState([]);\r\n\r\n  // This will grab the position of the cursor and start picking the colour.\r\n  const getColorParams = (event, element, hasClick) => {\r\n    let cords = getCords(event);\r\n    let canvas = document.querySelector(\"#cs\");\r\n    let thumb = document.querySelector(\"img\");\r\n\r\n    useCanvas(canvas, thumb, () => {\r\n      //This will grab the image data wether its the demo or user loaded one.\r\n      let params = canvas.getContext(\"2d\");\r\n      params = params.getImageData(cords.x, cords.y, 1, 1);\r\n      params = params.data;\r\n      //Starts to grab the data for the colour based on cursor position, and converts it to hex.\r\n      let bg = rgbToHex(params[0], params[1], params[2]);\r\n      //When it has clicked/tapped, it will print out the selected colours RGB values to each channel for Tone.js to Use\r\n      if (hasClick) setColors((colors) => [...colors, bg]);\r\n      if (hasClick) {\r\n        redChannel = params[0];\r\n        blueChannel = params[1];\r\n        greenChannel = params[2];\r\n      }\r\n      // add background in body\r\n      if (element) element.style.background = bg;\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const inputFile = document.querySelector(\"#image-input\");\r\n    const displayFile = document.querySelector(\"img\");\r\n    const preview = document.querySelector(\".preview\");\r\n    // getnerate image on select file\r\n    generateImage(inputFile, displayFile);\r\n    // click function\r\n    displayFile.addEventListener(\r\n      \"click\",\r\n      (event) => {\r\n        getColorParams(event, false, true);\r\n      },\r\n      false\r\n    );\r\n\r\n    // preview function mousemove\r\n    displayFile.addEventListener(\r\n      \"mousemove\",\r\n      (event) => {\r\n        getColorParams(event, preview, false);\r\n      },\r\n      false\r\n    );\r\n  }, []);\r\n\r\n  let num = 0;\r\n  return /*#__PURE__*/ React.createElement(\r\n    \"div\",\r\n    { className: \"main\" } /*#__PURE__*/,\r\n    React.createElement(\r\n      \"div\",\r\n      { className: \"container\" },\r\n      colors\r\n        ? colors.map((item) => {\r\n            let style = {\r\n              backgroundColor: item\r\n            };\r\n\r\n            return /*#__PURE__*/ React.createElement(\r\n              \"div\",\r\n              {\r\n                key: ++num,\r\n                style: style,\r\n                className: \"color\"\r\n              } /*#__PURE__*/,\r\n              React.createElement(\"span\", null, item)\r\n            );\r\n          })\r\n        : \"\"\r\n    ) /*#__PURE__*/,\r\n\r\n    React.createElement(\r\n      \"div\",\r\n      { className: \"container\" } /*#__PURE__*/,\r\n      React.createElement(\"div\", { className: \"preview\" }) /*#__PURE__*/,\r\n      React.createElement(\"img\", {\r\n        src: sampleImg,\r\n        id: \"image-display\",\r\n        alt: \"\"\r\n      }) /*#__PURE__*/,\r\n      React.createElement(\"input\", {\r\n        type: \"file\",\r\n        id: \"image-input\"\r\n      }) /*#__PURE__*/,\r\n      React.createElement(\r\n        \"label\",\r\n        { for: \"image-input\", id: \"fake\" },\r\n        \"Select Image\"\r\n      ) /*#__PURE__*/,\r\n      /*We are basically also creating an element with React as well, just so its can be contained with the rest of the stuff */\r\n      React.createElement(\"label\", { id: \"synth-play\" }, \"Play Synth\")\r\n    ) /*#__PURE__*/,\r\n\r\n    React.createElement(\"canvas\", { id: \"cs\" })\r\n  );\r\n};\r\n\r\nReactDOM.render(/*#__PURE__*/ React.createElement(App, null), window.root);\r\n\r\n/** Functions\r\n----------------------------*/\r\n// get cordinates of mouse\r\nfunction getCords(cords) {\r\n  let x = 0,\r\n    y = 0;\r\n  // chrome\r\n  if (cords.offsetX) {\r\n    x = cords.offsetX;\r\n    y = cords.offsetY;\r\n  }\r\n  // firefox\r\n  else if (cords.layerX) {\r\n    x = cords.layerX;\r\n    y = cords.layerY;\r\n  }\r\n  return { x, y };\r\n}\r\n\r\n// canvas function\r\nfunction useCanvas(el, image, callback) {\r\n  el.width = image.width; // img width\r\n  el.height = image.height; // img height\r\n  // draw image in canvas tag\r\n  el.getContext(\"2d\").drawImage(image, 0, 0, image.width, image.height);\r\n  return callback();\r\n}\r\n// This is only used to display the outputed colour in hexadecimal code\r\nfunction rgbToHex(r, g, b) {\r\n  r = r.toString(16);\r\n  g = g.toString(16);\r\n  b = b.toString(16);\r\n  r.length == 1 ? \"0\" + r : r;\r\n  g.length == 1 ? \"0\" + g : g;\r\n  b.length == 1 ? \"0\" + b : b;\r\n  return \"#\" + r + g + b;\r\n}\r\n// generate image on file select\r\nfunction generateImage(inputFile, displayFile) {\r\n  // demo img\r\n  let imgInput = inputFile,\r\n    db = window.localStorage;\r\n\r\n  // check if exists image-base64\r\n  if (!db.getItem(\"image-base64\")) {\r\n    let t = setTimeout(() => {\r\n      db.setItem(\"image-base64\", displayFile.getAttribute(\"src\"));\r\n      clearTimeout(t);\r\n    }, 100);\r\n  }\r\n\r\n  // Restore image src from local storage\r\n  const updateUi = () => {\r\n    var t = setTimeout(() => {\r\n      displayFile.src = db.getItem(\"image-base64\");\r\n      clearTimeout(t);\r\n    }, 200);\r\n  };\r\n\r\n  // on select file render image preview\r\n  const bindUi = () => {\r\n    imgInput.addEventListener(\r\n      \"change\",\r\n      function () {\r\n        if (this.files.length) {\r\n          const reader = new FileReader();\r\n          reader.onload = (e) => {\r\n            db.setItem(\"image-base64\", e.target.result);\r\n            updateUi();\r\n          };\r\n          // generate image data uri\r\n          reader.readAsDataURL(this.files[0]);\r\n        }\r\n      },\r\n      false\r\n    );\r\n  };\r\n\r\n  // update firdst\r\n  updateUi();\r\n  // select file\r\n  bindUi();\r\n}\r\n//Tone.JS Synth Configoration\r\nconst synth = new Tone.MonoSynth().toDestination();\r\n\r\nsynth.volume.value = -12;\r\n\r\nfunction playSynth(event) {\r\n  //RedchannelCalculation - If it goes a curtain value, the pitch will change\r\n  let redSynth = 0;\r\n  if (redChannel >= 200 && redChannel <= 255) {\r\n    redSynth = 6;\r\n  }\r\n  if (redChannel >= 155 && redChannel <= 200) {\r\n    redSynth = 5;\r\n  }\r\n  if (redChannel >= 115 && redChannel <= 155) {\r\n    redSynth = 4;\r\n  }\r\n  if (redChannel >= 90 && redChannel <= 115) {\r\n    redSynth = 3;\r\n  }\r\n  if (redChannel >= 50 && redChannel <= 90) {\r\n    redSynth = 2;\r\n  }\r\n  if (redChannel >= 0 && redChannel <= 50) {\r\n    redSynth = 1;\r\n  }\r\n\r\n  //BluechannelCalculation - What is this doing is each time the Synth is played, it sets its oscillator type depending on the blue channel's value.\r\n\r\n  if (blueChannel >= 215 && blueChannel <= 255) {\r\n    synth.set({\r\n      oscillator: {\r\n        type: \"sawtooth\"\r\n      }\r\n    });\r\n  }\r\n  if (blueChannel >= 160 && blueChannel <= 215) {\r\n    synth.set({\r\n      oscillator: {\r\n        type: \"pulse\"\r\n      }\r\n    });\r\n  }\r\n  if (blueChannel >= 130 && blueChannel <= 160) {\r\n    synth.set({\r\n      oscillator: {\r\n        type: \"triangle\"\r\n      }\r\n    });\r\n  }\r\n  if (blueChannel >= 100 && blueChannel <= 130) {\r\n    synth.set({\r\n      oscillator: {\r\n        type: \"amsquare\"\r\n      }\r\n    });\r\n  }\r\n  if (blueChannel >= 0 && blueChannel <= 100) {\r\n    synth.set({\r\n      oscillator: {\r\n        type: \"sine\"\r\n      }\r\n    });\r\n  }\r\n\r\n  let greenNote = \"C\";\r\n  if (greenChannel >= 210 && greenChannel <= 255) {\r\n    greenNote = \"A\";\r\n  }\r\n  if (greenChannel >= 180 && greenChannel <= 210) {\r\n    greenNote = \"B\";\r\n  }\r\n  if (greenChannel >= 150 && greenChannel <= 180) {\r\n    greenNote = \"G\";\r\n  }\r\n  if (greenChannel >= 125 && greenChannel <= 150) {\r\n    greenNote = \"F\";\r\n  }\r\n  if (greenChannel >= 95 && greenChannel <= 125) {\r\n    greenNote = \"E\";\r\n  }\r\n  if (greenChannel >= 60 && greenChannel <= 95) {\r\n    greenNote = \"D\";\r\n  }\r\n  if (greenChannel >= 0 && greenChannel <= 60) {\r\n    greenNote = \"C\";\r\n  }\r\n\r\n  Tone.context.resume();\r\n  console.log(\r\n    \"Red: \" + redChannel + \" Green: \" + greenChannel + \" Blue: \" + blueChannel\r\n  );\r\n  //console.log(e.target.id);\r\n  synth.triggerAttackRelease(greenNote + redSynth, \"1.5\");\r\n}\r\n\r\n//The function should be called directly into the synth-play element we created with React earlier\r\ndocument.getElementById(\"synth-play\").addEventListener(\"click\", playSynth);\r\n"]}